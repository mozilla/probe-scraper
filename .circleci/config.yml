---

version: 2
jobs:
  build_and_test:
    machine:
      image: default
    working_directory: ~/mozilla/probe-scraper
    steps:
      - checkout
      - run: make build
      - run: make lint
      - run: make check-repos
      - run: make test
      - run: make burnham-dryrun

  deploy_docker:
    docker: &gcloud-image
      - image: gcr.io/google.com/cloudsdktool/cloud-sdk:398.0.0-alpine
    working_directory: ~/mozilla/probe-scraper
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build container
          command: |
            docker build -t app:build .
      - run:
          name: Configure gcloud
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud auth configure-docker
      - run:
          name: Deploy to GCR
          command: |
            DOCKER_IMAGE="gcr.io/${GOOGLE_PROJECT_ID}/probe-scraper"
            # Deploy main
            if [ "${CIRCLE_BRANCH}" == main ]; then
              docker tag app:build "${DOCKER_IMAGE}:latest"
              docker push "${DOCKER_IMAGE}:latest"
            elif  [ ! -z "${CIRCLE_TAG}" ]; then
            # Deploy a release tag...
              echo "${DOCKER_IMAGE}:${CIRCLE_TAG}"
              docker tag app:build "${DOCKER_IMAGE}:${CIRCLE_TAG}"
              docker images
              docker push "${DOCKER_IMAGE}:${CIRCLE_TAG}"
            fi

  deploy_cloud_function:
    docker: *gcloud-image
    steps:
      - checkout
      - run:
          name: Install jq
          command: apk add jq
      - run:
          name: Activate Credentials
          command: |
            KEY="$(echo "$GCLOUD_SERVICE_KEY_PROD_B64" | base64 -d)"
            echo "$KEY" | gcloud --quiet auth activate-service-account --key-file=-
            gcloud --quiet config set project "$(echo "$KEY" | jq -r .project_id)"
      - run:
          name: Deploy Google Cloud Function
          command: >
            gcloud functions deploy glean-push
            --region=us-west1
            --allow-unauthenticated
            --entry-point=glean_push
            --memory=2048
            --runtime=python310
            --set-env-vars=BOTO_PATH=.gce_boto,OUTPUT_BUCKET=gs://probe-scraper-prod-artifacts/
            --trigger-http
            --service-account=$PROD_SERVICE_ACCOUNT_INVOKER
            --timeout=540s

  docs_build:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - run:
          name: Install redoc
          command: |
            npm install @redocly/cli
      - run:
          name: Build docs
          command: |
            npx @redocly/cli build-docs probeinfo_api.yaml -o docs/index.html \
              --theme.openapi.expandResponses="200,201" \
              --theme.openapi.jsonSampleExpandLevel=2
      - persist_to_workspace:
          root: docs
          paths: index.html
  docs_deploy:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - attach_workspace:
          at: docs/
      - run:
          name: Disable jekyll builds
          command: touch docs/.nojekyll
      - run:
          name: Install and configure dependencies
          command: |
            npm install gh-pages@2.0.1
            git config user.email "ci-build@mozilla.com"
            git config user.name "ci-build"
      - add_ssh_keys:
          fingerprints:
            - "37:cd:ad:cf:75:1f:96:9f:9b:ce:e0:6c:b4:09:26:4d"
      - run:
          name: Deploy docs to gh-pages branch
          command: npx gh-pages --dotfiles --message "[skip ci] Updates" --dist docs/

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build_and_test:
          filters:
            tags:
              only: /.*/
      - docs_build
      - docs_deploy:
          requires:
            - docs_build
          filters:
            branches:
              only: main
      - deploy_docker:
          context: data-eng-airflow-gcr
          requires:
            - build_and_test
          filters:
            tags:
              only: /.*/
            branches:
              only: main
      - deploy_cloud_function:
          context: probe-scraper
          requires:
            - build_and_test
          filters:
            branches:
              only: main
